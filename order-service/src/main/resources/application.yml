server:
  port: 8080
spring:
  application:
    name: orderservice # eureka的服务名称
  datasource:
    url: jdbc:mysql://localhost:3306/cloud_order?useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
  cloud:
    nacos:
      server-addr: localhost:8848 # nacos服务地址
      discovery:
        #        namespace: XXXX
        #不同命名空间是隔离的，在nacos中创建命名空间后，使用id来区别
        cluster-name: XM
#        临时实例,默认为true,差别在nacos主动查询服务状态.且服务宕机后nacos不会剔除
#        ephemeral: false

mybatis:
  type-aliases-package: cn.itcast.user.pojo
  configuration:
    map-underscore-to-camel-case: true
logging:
  level:
    cn.itcast: debug
  pattern:
    dateformat: MM-dd HH:mm:ss:SSS
#eureka:
#  client:
#    service-url:  # eureka的地址
#      defaultZone: http://127.0.0.1:10086/eureka

userservice:
  ribbon:
    NFLoadBalancerRuleClassName: com.alibaba.cloud.nacos.ribbon.NacosRule  # nacos的负载均衡规则 可以做集群负载
#    nacosRule优先选择同集群 同集群内随机访问 跨集群访问会报warn 可以在nacos页面调整权重

#  开启饥饿加载，默认懒加载，即在不会初始化client和拉取列表，只有在第一次请求时初始化，开启饥饿加载后在项目创建时就会初始化
#配置完后第一次加载可能还是慢,可能是因为初始化dispatchServlet

ribbon:
  eager-load:
    enabled: true # 开启饥饿加载
    clients: # 指定饥饿加载的服务名称
      - userservice


#default是默认配置,也可以指定某个服务配置
feign:
  client:
    config:
      default:
        logger-level: BASIC
  httpclient:
    enabled: true # 支持HttpClient的开关
    max-connections: 200 # 最大连接数
    max-connections-per-route: 50 # 单个路径的最大连接数